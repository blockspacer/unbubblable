Что сделать:

+ Отправлять клиенту сообщения о других игроках
+ Понять какие сообщения надо группировать, а какие отправлять маленькими пакетиками.
+ Пормотреть как ведет себя сетевой код в реальной сети с задержками и потерей пакетов
+ Контроль за порядком следования сообщений
+ Обработка лагов
+ Коррекция положения персонажа на клиенте и сервере


Вопросы:

[?] Нужно ли как-то останавливать loop? Ticker.Stop() не закрывает канал.
[?] Как оформлять обработку сообщений клиента? Методами персонажа или методами "протокола"
[?] Регулярно позиции на клиенте и сервере различаются при локальном коннекте, где потери пакетов невозможны. Найти причину


--------------------------------------
version 0.6

* Протокол теперь основан на Protobuf
* В протоколе реализована возможность группировки нескольких сообщений в одно сообщение-контейнер 

* [клиент] Код разбит на модули, для сборки используется babel и browserify


--------------------------------------
version 0.5.2

* [клиент] Переписан обработчик клавиатуры (нужно ли было?)
* [клиент] Теперь на сервер отправляются не координаты персонажа, а статусы управляющих клавиш клавиатуры.
* [клиент] Обработка изменения позиции игрока теперь в тикере, а в рендере только отображение.
* [клиент] При нажатом Shift скорость передвижения/поворота и камеры уменьшаются втрое.
* [клиент] Скорость передвижения стала независимой от FPS и получила явное определение (скорость = количество тайлов в секунду * 10).
* [клиент] Игрок стал перемещаться дискретно, но отображение осталось плавным
* [клиент] По аналогии с игроком перемещение эха стало плавным. Код вынесен в отдельную функцию.

* [сервер] Типы сообщений вынесены в отдельный файл.
* [сервер] Написан тикер, рассчитывающий положение игрока в зависимости от принятых от клиента статусов клавиатуры.
* [сервер] Положение игрока и приращения отправляется клиенту в конце просчета каждого тика.